<Window x:Class="PS4KeyboardAndMouseAdapter.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PS4KeyboardAndMouseAdapter"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        mc:Ignorable="d"
        Title="{Binding Title}"
        Height="450" Width="639" ResizeMode="CanMinimize">

    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>
    
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>
                <Grid Background="Black" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="10*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*" />
                        <RowDefinition Height="11*" />
                        <RowDefinition Height="2*" />
                    </Grid.RowDefinitions>

                     <Image x:Name="JoystickImage" Stretch="Uniform" Grid.ColumnSpan="3" Grid.RowSpan="3"> 
                         <Image.Source> 
                             <BitmapImage UriSource="dualshock4_layout.png"/> 
                         </Image.Source> 
                     </Image>

            <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" Margin="0, 20, 0, 0">
                <ToggleButton 
                              IsChecked="{Binding IsCursorHideRequested, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Margin="0, 5, 0, 5"
                              Height="30"
                              HorizontalAlignment="Center"
                              Opacity="0.72"
                              Background="Transparent"
                              Click="OnMouseHideToggleButtonClicked">
                    <ToggleButton.Style>    
                        <Style TargetType="{x:Type ToggleButton}">

                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Foreground" Value="DarkSlateGray" />
                                    <Setter Property="Content" Value="  Mouse will now be hidden once you go back to RemotePlay  "/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content" Value="  Hide mouse cursor in RemotePlay  "/>
                                    <Setter Property="Foreground" Value="WhiteSmoke" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="DarkSlateGray" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <TextBlock Text="Tip: You can press alt+tab to switch between windows once the mouse is hidden."
                           HorizontalAlignment="Center"
                           Foreground="WhiteSmoke" Opacity="0.7" FontSize="10"/>
            </StackPanel>


                    <TextBlock x:Name="PressKeyText" Text="Press a key to map" Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="3"
                               HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Crimson" Opacity="0"
                               FontFamily="Comic Sans MS" FontWeight="Bold" FontSize="30"/>

                    <Grid Grid.Column="1" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="17*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="1.1*"/>
                            <RowDefinition Height="1.6*" />
                            <RowDefinition Height="1.1*" />
                            <RowDefinition Height="0.75*" />
                            <RowDefinition Height="1.1*" />
                            <RowDefinition Height="1.3*" />
                            <RowDefinition Height="1.3*" />
                            <RowDefinition Height="1.3*" />
                            <RowDefinition Height="1.3*" />
                            <RowDefinition Height="1.3*" />
                            <RowDefinition Height="1.3*" />
                            <RowDefinition Height="1.3*" />
                            <RowDefinition Height="0.1*" />
                            <RowDefinition Height="1.1*" />
                            <RowDefinition Height="0.4*" />
                        </Grid.RowDefinitions>

                        <Grid.Resources>
                            <Style TargetType="{x:Type Button}">
                                <EventSetter Event="Click" Handler="ButtonBase_OnClick" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="WhiteSmoke"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </Style>

                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="WhiteSmoke"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </Style>
                        </Grid.Resources>

                        <Button Tag="{x:Static local:VirtualKey.TouchButton}" Content="{Binding Path=Mappings[(local:VirtualKey)TouchButton], UpdateSourceTrigger=PropertyChanged}"
                                Grid.Column="1" Grid.Row="0" Visibility="Visible"/>

                        <Button Tag="{x:Static local:VirtualKey.L2}" Content="{Binding Path=Mappings[(local:VirtualKey)L2], UpdateSourceTrigger=PropertyChanged}"
                                Grid.Column="1" Grid.Row="2" Visibility="Visible"/>

                        <svgc:SvgViewbox Grid.Column="0" Grid.Row="2" Margin="-8, -5, -2, -2" Stretch="Uniform" 
                                         Source="pack://application:,,,/mouse-right-button.svg" Opacity="0.4"/>

                        <Button Tag="{x:Static local:VirtualKey.L1}" Content="{Binding Path=Mappings[(local:VirtualKey)L1], UpdateSourceTrigger=PropertyChanged}"
                        Grid.Column="1" Grid.Row="4" Visibility="Visible"/>
                        <Button Content="asd" Grid.Column="1" Grid.Row="6" Visibility="Hidden"/>
                        <Button Content="asd" Grid.Column="1" Grid.Row="7" Visibility="Hidden"/>
                        <Button Content="asd" Grid.Column="1" Grid.Row="8" Visibility="Hidden"/>
                        <Button Content="asd" Grid.Column="1" Grid.Row="9" Visibility="Hidden"/>
                        <Grid Grid.Column="0" Grid.Row="10" Grid.ColumnSpan="2" Grid.RowSpan="2" Margin="0, 0, 0, 0" HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Button Tag="{x:Static local:VirtualKey.Up}" Content="{Binding Path=Mappings[(local:VirtualKey)Up], UpdateSourceTrigger=PropertyChanged}" 
                                    Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" />
                            <Grid  Grid.Column="0" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <Button Tag="{x:Static local:VirtualKey.Left}" Content="{Binding Path=Mappings[(local:VirtualKey)Left], UpdateSourceTrigger=PropertyChanged}" 
                                        Grid.Column="0" />
                                <Button Tag="{x:Static local:VirtualKey.Down}" Content="{Binding Path=Mappings[(local:VirtualKey)Down], UpdateSourceTrigger=PropertyChanged}" 
                                        Grid.Column="1" />
                                <Button Tag="{x:Static local:VirtualKey.Right}" Content="{Binding Path=Mappings[(local:VirtualKey)Right], UpdateSourceTrigger=PropertyChanged}" 
                                        Grid.Column="2" />
                            </Grid>
                        </Grid>
                <Button Tag="{x:Static local:VirtualKey.L3}" Content="{Binding Path=Mappings[(local:VirtualKey)L3], UpdateSourceTrigger=PropertyChanged}"
                        Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="13" Visibility="Visible"/>

                        <Button Tag="{x:Static local:VirtualKey.Options}" Content="{Binding Path=Mappings[(local:VirtualKey)Options]}"
                                Grid.Column="3" Grid.Row="0" Visibility="Visible"/>
                        <svgc:SvgViewbox Grid.Column="4" Grid.Row="2" Margin="-2, -5, -8, -2" Stretch="Uniform" 
                                         Source="pack://application:,,,/mouse-left-button.svg" Opacity="0.4"/>

                        <Button Tag="{x:Static local:VirtualKey.R2}" Content="{Binding Path=Mappings[(local:VirtualKey)R2]}"
                                Grid.Column="3" Grid.Row="2" Visibility="Visible"/>

                        <Button Tag="{x:Static local:VirtualKey.R1}" Content="{Binding Path=Mappings[(local:VirtualKey)R1]}"
                                Grid.Column="3" Grid.Row="4" Visibility="Visible"/>
                        <Button Tag="{x:Static local:VirtualKey.Triangle}" Content="{Binding Path=Mappings[(local:VirtualKey)Triangle]}" 
                                Grid.Column="3" Grid.Row="6" />
                        <Button Tag="{x:Static local:VirtualKey.Circle}" Content="{Binding Path=Mappings[(local:VirtualKey)Circle]}" 
                                Grid.Column="3" Grid.Row="7" />
                        <Button Tag="{x:Static local:VirtualKey.Square}" Content="{Binding Path=Mappings[(local:VirtualKey)Square]}" 
                                Grid.Column="3" Grid.Row="8" />
                        <Button Tag="{x:Static local:VirtualKey.Cross}" Content="{Binding Path=Mappings[(local:VirtualKey)Cross]}" 
                                Grid.Column="3" Grid.Row="9" />
                        <svgc:SvgViewbox Grid.Column="4" Grid.Row="11" Margin="-4, -5, -9, -2" Stretch="Uniform" 
                                         Source="pack://application:,,,/mouse-move.svg" Opacity="0.4"/>
                        <Button Tag="{x:Static local:VirtualKey.R3}" Content="{Binding Path=Mappings[(local:VirtualKey)R3]}"
                                Grid.Column="3" Grid.Row="13" Visibility="Visible"/>
                    </Grid>
                </Grid>
                <!-- -->
                <!-- <Grid Grid.Column="1"> -->
                <!--     <StackPanel> -->
                <!--         <TextBlock Text="Mouse sensitivity"/> -->
                <!--         <Slider Name="mouseSensitivitySlider" Maximum="10" TickFrequency="20" IsSnapToTickEnabled="True"/> -->
                <!-- -->
                <!--         <TextBlock Text="Horizontal/Vertical ratio"/> -->
                <!--         <Slider Minimum="-5" Maximum="5" TickFrequency="20" IsSnapToTickEnabled="True"/> -->
                <!--     </StackPanel> -->
                <!-- -->
                <!-- </Grid> -->
            </Grid>
            <!--</TabItem>
            <TabItem Header="Advanced">
            </TabItem>

        </TabControl>
    </Grid>-->
</Window>
